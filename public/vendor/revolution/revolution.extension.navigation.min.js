/** ******************************************
 * REVOLUTION 5.0 EXTENSION - NAVIGATION
 * @version: 1.0.4 (10.11.2015)
 * @requires jquery.themepunch.revolution.js
 * @author ThemePunch
******************************************** */

!(function () {
  const t = jQuery.fn.revolution; const e = t.is_mobile(); jQuery.extend(!0, t, {
    hideUnHideNav(t) { const e = t.c.width(); const i = t.navigation.arrows; const a = t.navigation.bullets; const n = t.navigation.thumbnails; const r = t.navigation.tabs; h(i) && y(t.c.find('.tparrows'), i.hide_under, e, i.hide_over), h(a) && y(t.c.find('.tp-bullets'), a.hide_under, e, a.hide_over), h(n) && y(t.c.parent().find('.tp-thumbs'), n.hide_under, e, n.hide_over), h(r) && y(t.c.parent().find('.tp-tabs'), r.hide_under, e, r.hide_over), x(t); }, resizeThumbsTabs(t) { if (t.navigation && t.navigation.tabs.enable || t.navigation && t.navigation.thumbnails.enable) { let e = (jQuery(window).width() - 480) / 500; const i = new punchgs.TimelineLite(); const n = t.navigation.tabs; const r = t.navigation.thumbnails; i.pause(), e = e > 1 ? 1 : e < 0 ? 0 : e, h(n) && n.width > n.min_width && a(e, i, t.c, n, t.slideamount, 'tab'), h(r) && r.width > r.min_width && a(e, i, t.c, r, t.slideamount, 'thumb'), i.play(), x(t); } return !0; }, manageNavigation(e) { const a = t.getHorizontalOffset(e.c.parent(), 'left'); const n = t.getHorizontalOffset(e.c.parent(), 'right'); h(e.navigation.bullets) && (e.sliderLayout != 'fullscreen' && e.sliderLayout != 'fullwidth' && (e.navigation.bullets.h_offset_old = void 0 === e.navigation.bullets.h_offset_old ? e.navigation.bullets.h_offset : e.navigation.bullets.h_offset_old, e.navigation.bullets.h_offset = e.navigation.bullets.h_align === 'center' ? e.navigation.bullets.h_offset_old + a / 2 - n / 2 : e.navigation.bullets.h_offset_old + a - n), m(e.c.find('.tp-bullets'), e.navigation.bullets)), h(e.navigation.thumbnails) && m(e.c.parent().find('.tp-thumbs'), e.navigation.thumbnails), h(e.navigation.tabs) && m(e.c.parent().find('.tp-tabs'), e.navigation.tabs), h(e.navigation.arrows) && (e.sliderLayout != 'fullscreen' && e.sliderLayout != 'fullwidth' && (e.navigation.arrows.left.h_offset_old = void 0 === e.navigation.arrows.left.h_offset_old ? e.navigation.arrows.left.h_offset : e.navigation.arrows.left.h_offset_old, e.navigation.arrows.left.h_offset = e.navigation.arrows.left.h_align === 'right' ? e.navigation.arrows.left.h_offset_old + n : e.navigation.arrows.left.h_offset_old + a, e.navigation.arrows.right.h_offset_old = void 0 === e.navigation.arrows.right.h_offset_old ? e.navigation.arrows.right.h_offset : e.navigation.arrows.right.h_offset_old, e.navigation.arrows.right.h_offset = e.navigation.arrows.right.h_align === 'right' ? e.navigation.arrows.right.h_offset_old + n : e.navigation.arrows.right.h_offset_old + a), m(e.c.find('.tp-leftarrow.tparrows'), e.navigation.arrows.left), m(e.c.find('.tp-rightarrow.tparrows'), e.navigation.arrows.right)), h(e.navigation.thumbnails) && i(e.c.parent().find('.tp-thumbs'), e.navigation.thumbnails), h(e.navigation.tabs) && i(e.c.parent().find('.tp-tabs'), e.navigation.tabs); }, createNavigation(t, a) { const n = t.parent(); const o = a.navigation.arrows; const p = a.navigation.bullets; const g = a.navigation.thumbnails; const v = a.navigation.tabs; const m = h(o); const w = h(p); const x = h(g); const y = h(v); r(t, a), s(t, a), m && f(t, o, a), a.li.each(function () { const e = jQuery(this); w && b(t, p, e, a), x && _(t, g, e, 'tp-thumb', a), y && _(t, v, e, 'tp-tab', a); }), t.bind('revolution.slide.onafterswap revolution.nextslide.waiting', () => { const e = t.find('.next-revslide').length == 0 ? t.find('.active-revslide').data('index') : t.find('.next-revslide').data('index'); t.find('.tp-bullet').each(function () { const t = jQuery(this); t.data('liref') === e ? t.addClass('selected') : t.removeClass('selected'); }), n.find('.tp-thumb, .tp-tab').each(function () { const t = jQuery(this); t.data('liref') === e ? (t.addClass('selected'), t.hasClass('tp-tab') ? i(n.find('.tp-tabs'), v) : i(n.find('.tp-thumbs'), g)) : t.removeClass('selected'); }); let r = 0; let s = !1; a.thumbs && jQuery.each(a.thumbs, (t, i) => { r = s === !1 ? t : r, s = i.id === e || t === e ? !0 : s; }); const d = r > 0 ? r - 1 : a.slideamount - 1; const l = r + 1 == a.slideamount ? 0 : r + 1; if (o.enable === !0) { let h = o.tmp; jQuery.each(a.thumbs[d].params, (t, e) => { h = h.replace(e.from, e.to); }), o.left.j.html(h), h = o.tmp, jQuery.each(a.thumbs[l].params, (t, e) => { h = h.replace(e.from, e.to); }), o.right.j.html(h), punchgs.TweenLite.set(o.left.j.find('.tp-arr-imgholder'), { backgroundImage: `url(${a.thumbs[d].src})` }), punchgs.TweenLite.set(o.right.j.find('.tp-arr-imgholder'), { backgroundImage: `url(${a.thumbs[l].src})` }); } }), l(o), l(p), l(g), l(v), n.on('mouseenter mousemove', () => { n.hasClass('tp-mouseover') || (n.addClass('tp-mouseover'), punchgs.TweenLite.killDelayedCallsTo(c), m && o.hide_onleave && c(n.find('.tparrows'), o, 'show'), w && p.hide_onleave && c(n.find('.tp-bullets'), p, 'show'), x && g.hide_onleave && c(n.find('.tp-thumbs'), g, 'show'), y && v.hide_onleave && c(n.find('.tp-tabs'), v, 'show'), e && (n.removeClass('tp-mouseover'), u(t, a))); }), n.on('mouseleave', () => { n.removeClass('tp-mouseover'), u(t, a); }), m && o.hide_onleave && c(n.find('.tparrows'), o, 'hide', 0), w && p.hide_onleave && c(n.find('.tp-bullets'), p, 'hide', 0), x && g.hide_onleave && c(n.find('.tp-thumbs'), g, 'hide', 0), y && v.hide_onleave && c(n.find('.tp-tabs'), v, 'hide', 0), x && d(n.find('.tp-thumbs'), a), y && d(n.find('.tp-tabs'), a), a.sliderType === 'carousel' && d(t, a, !0), a.navigation.touch.touchenabled == 'on' && d(t, a, 'swipebased'); },
  }); var i = function (t, e) { const i = (t.hasClass('tp-thumbs') ? '.tp-thumbs' : '.tp-tabs', t.hasClass('tp-thumbs') ? '.tp-thumb-mask' : '.tp-tab-mask'); const a = t.hasClass('tp-thumbs') ? '.tp-thumbs-inner-wrapper' : '.tp-tabs-inner-wrapper'; const n = t.hasClass('tp-thumbs') ? '.tp-thumb' : '.tp-tab'; const r = t.find(i); const s = r.find(a); const o = e.direction; const d = o === 'vertical' ? r.find(n).first().outerHeight(!0) + e.space : r.find(n).first().outerWidth(!0) + e.space; const l = o === 'vertical' ? r.height() : r.width(); const h = parseInt(r.find(`${n}.selected`).data('liindex'), 0); const p = l / d; const u = o === 'vertical' ? r.height() : r.width(); const c = 0 - h * d; const f = o === 'vertical' ? s.height() : s.width(); var g = 0 - (f - u) > c ? 0 - (f - u) : g > 0 ? 0 : c; const v = s.data('offset'); p > 2 && (g = c - (v + d) <= 0 ? 0 - d > c - (v + d) ? v : g + d : g, g = d > c - d + v + l && c + (Math.round(p) - 2) * d < v ? c + (Math.round(p) - 2) * d : g), g = 0 - (f - u) > g ? 0 - (f - u) : g > 0 ? 0 : g, o !== 'vertical' && r.width() >= s.width() && (g = 0), o === 'vertical' && r.height() >= s.height() && (g = 0), t.hasClass('dragged') || (o === 'vertical' ? s.data('tmmove', punchgs.TweenLite.to(s, 0.5, { top: `${g}px`, ease: punchgs.Power3.easeInOut })) : s.data('tmmove', punchgs.TweenLite.to(s, 0.5, { left: `${g}px`, ease: punchgs.Power3.easeInOut })), s.data('offset', g)); }; var a = function (t, e, i, a, n, r) { const s = i.parent().find(`.tp-${r}s`); const o = s.find(`.tp-${r}s-inner-wrapper`); const d = s.find(`.tp-${r}-mask`); const l = a.width * t < a.min_width ? a.min_width : Math.round(a.width * t); const h = Math.round(l / a.width * a.height); const p = a.direction === 'vertical' ? l : l * n + a.space * (n - 1); const u = a.direction === 'vertical' ? h * n + a.space * (n - 1) : h; const c = a.direction === 'vertical' ? { width: `${l}px` } : { height: `${h}px` }; e.add(punchgs.TweenLite.set(s, c)), e.add(punchgs.TweenLite.set(o, { width: `${p}px`, height: `${u}px` })), e.add(punchgs.TweenLite.set(d, { width: `${p}px`, height: `${u}px` })); const f = o.find(`.tp-${r}`); return f && jQuery.each(f, (t, i) => { a.direction === 'vertical' ? e.add(punchgs.TweenLite.set(i, { top: t * (h + parseInt(void 0 === a.space ? 0 : a.space, 0)), width: `${l}px`, height: `${h}px` })) : a.direction === 'horizontal' && e.add(punchgs.TweenLite.set(i, { left: t * (l + parseInt(void 0 === a.space ? 0 : a.space, 0)), width: `${l}px`, height: `${h}px` })); }), e; }; const n = function (t) {
    let e = 0; let i = 0; let a = 0; let n = 0; const r = 1; const s = 1; const o = 1; return 'detail' in t && (i = t.detail), 'wheelDelta' in t && (i = -t.wheelDelta / 120), 'wheelDeltaY' in t && (i = -t.wheelDeltaY / 120), 'wheelDeltaX' in t && (e = -t.wheelDeltaX / 120), 'axis' in t && t.axis === t.HORIZONTAL_AXIS && (e = i, i = 0), a = e * r, n = i * r, 'deltaY' in t && (n = t.deltaY), 'deltaX' in t && (a = t.deltaX), (a || n) && t.deltaMode && (t.deltaMode == 1 ? (a *= s, n *= s) : (a *= o, n *= o)), a && !e && (e = a < 1 ? -1 : 1), n && !i && (i = n < 1 ? -1 : 1), n = navigator.userAgent.match(/mozilla/i) ? 10 * n : n, (n > 300 || n < -300) && (n /= 10), {
      spinX: e, spinY: i, pixelX: a, pixelY: n,
    };
  }; var r = function (e, i) { i.navigation.keyboardNavigation === 'on' && jQuery(document).keydown((a) => { (i.navigation.keyboard_direction == 'horizontal' && a.keyCode == 39 || i.navigation.keyboard_direction == 'vertical' && a.keyCode == 40) && (i.sc_indicator = 'arrow', i.sc_indicator_dir = 0, t.callingNewSlide(i, e, 1)), (i.navigation.keyboard_direction == 'horizontal' && a.keyCode == 37 || i.navigation.keyboard_direction == 'vertical' && a.keyCode == 38) && (i.sc_indicator = 'arrow', i.sc_indicator_dir = 1, t.callingNewSlide(i, e, -1)); }); }; var s = function (e, i) { if (i.navigation.mouseScrollNavigation === 'on') { const a = navigator.userAgent.match(/mozilla/i) ? -29 : -49; const r = navigator.userAgent.match(/mozilla/i) ? 29 : 49; e.on('mousewheel DOMMouseScroll', (s) => { const o = n(s.originalEvent); const d = e.find('.tp-revslider-slidesli.active-revslide').index(); const l = e.find('.tp-revslider-slidesli.processing-revslide').index(); const h = d != -1 && d == 0 || l != -1 && l == 0 ? !0 : !1; const p = d != -1 && d == i.slideamount - 1 || l != 1 && l == i.slideamount - 1 ? !0 : !1; if (l == -1) { if (o.pixelY < a) { if (!h) return i.sc_indicator = 'arrow', i.sc_indicator_dir = 0, t.callingNewSlide(i, e, -1), !1; } else if (o.pixelY > r && !p) return i.sc_indicator = 'arrow', i.sc_indicator_dir = 1, t.callingNewSlide(i, e, 1), !1; } else if (!p) return !1; s.preventDefault(); }); } }; const o = function (t, i, a) { return t = e ? jQuery(a.target).closest(`.${t}`).length || jQuery(a.srcElement).closest(`.${t}`).length : jQuery(a.toElement).closest(`.${t}`).length || jQuery(a.originalTarget).closest(`.${t}`).length, t === !0 || t === 1 ? 1 : 0; }; var d = function (i, a, n) {
    i.data('opt', a); const r = a.carousel; jQuery('.bullet, .bullets, .tp-bullets, .tparrows').addClass('noSwipe'), r.Limit = 'endless'; const s = (e || t.get_browser() === 'Firefox', i); let d = a.navigation.thumbnails.direction === 'vertical' || a.navigation.tabs.direction === 'vertical' ? 'none' : 'vertical'; const l = a.navigation.touch.swipe_direction || 'horizontal'; d = n == 'swipebased' && l == 'vertical' ? 'none' : n ? 'vertical' : d, jQuery.fn.swipetp || (jQuery.fn.swipetp = jQuery.fn.swipe), jQuery.fn.swipetp.defaults && jQuery.fn.swipetp.defaults.excludedElements || jQuery.fn.swipetp.defaults || (jQuery.fn.swipetp.defaults = new Object()), jQuery.fn.swipetp.defaults.excludedElements = 'label, button, input, select, textarea, .noSwipe', s.swipetp({
      allowPageScroll: d,
      triggerOnTouchLeave: !0,
      excludeElements: jQuery.fn.swipetp.defaults.excludedElements,
      swipeStatus(e, n, s, d) {
        const h = o('rev_slider_wrapper', i, e); const p = o('tp-thumbs', i, e); const u = o('tp-tabs', i, e); const c = jQuery(this).attr('class'); const f = c.match(/tp-tabs|tp-thumb/gi) ? !0 : !1; if (a.sliderType === 'carousel' && ((n === 'move' || n === 'end' || n == 'cancel') && a.dragStartedOverSlider && !a.dragStartedOverThumbs && !a.dragStartedOverTabs || n === 'start' && h > 0 && p === 0 && u === 0)) switch (a.dragStartedOverSlider = !0, d = s && s.match(/left|up/g) ? Math.round(-1 * d) : d = Math.round(1 * d), n) { case 'start': void 0 !== r.positionanim && (r.positionanim.kill(), r.slide_globaloffset = r.infinity === 'off' ? r.slide_offset : t.simp(r.slide_offset, r.maxwidth)), r.overpull = 'none', r.wrap.addClass('dragged'); break; case 'move': if (r.slide_offset = r.infinity === 'off' ? r.slide_globaloffset + d : t.simp(r.slide_globaloffset + d, r.maxwidth), r.infinity === 'off') { const g = r.horizontal_align === 'center' ? (r.wrapwidth / 2 - r.slide_width / 2 - r.slide_offset) / r.slide_width : (0 - r.slide_offset) / r.slide_width; r.overpull !== 'none' && r.overpull !== 0 || !(g < 0 || g > a.slideamount - 1) ? g >= 0 && g <= a.slideamount - 1 && (g >= 0 && d > r.overpull || g <= a.slideamount - 1 && d < r.overpull) && (r.overpull = 0) : r.overpull = d, r.slide_offset = g < 0 ? r.slide_offset + (r.overpull - d) / 1.1 + Math.sqrt(Math.abs((r.overpull - d) / 1.1)) : g > a.slideamount - 1 ? r.slide_offset + (r.overpull - d) / 1.1 - Math.sqrt(Math.abs((r.overpull - d) / 1.1)) : r.slide_offset; }t.organiseCarousel(a, s, !0, !0); break; case 'end': case 'cancel': r.slide_globaloffset = r.slide_offset, r.wrap.removeClass('dragged'), t.carouselToEvalPosition(a, s), a.dragStartedOverSlider = !1, a.dragStartedOverThumbs = !1, a.dragStartedOverTabs = !1; } else {
          if ((n !== 'move' && n !== 'end' && n != 'cancel' || a.dragStartedOverSlider || !a.dragStartedOverThumbs && !a.dragStartedOverTabs) && !(n === 'start' && h > 0 && (p > 0 || u > 0))) { if (n == 'end' && !f) { if (a.sc_indicator = 'arrow', l == 'horizontal' && s == 'left' || l == 'vertical' && s == 'up') return a.sc_indicator_dir = 0, t.callingNewSlide(a, a.c, 1), !1; if (l == 'horizontal' && s == 'right' || l == 'vertical' && s == 'down') return a.sc_indicator_dir = 1, t.callingNewSlide(a, a.c, -1), !1; } return a.dragStartedOverSlider = !1, a.dragStartedOverThumbs = !1, a.dragStartedOverTabs = !1, !0; }p > 0 && (a.dragStartedOverThumbs = !0), u > 0 && (a.dragStartedOverTabs = !0); const v = a.dragStartedOverThumbs ? '.tp-thumbs' : '.tp-tabs'; const m = a.dragStartedOverThumbs ? '.tp-thumb-mask' : '.tp-tab-mask'; const b = a.dragStartedOverThumbs ? '.tp-thumbs-inner-wrapper' : '.tp-tabs-inner-wrapper'; const w = a.dragStartedOverThumbs ? '.tp-thumb' : '.tp-tab'; const
            _ = a.dragStartedOverThumbs ? a.navigation.thumbnails : a.navigation.tabs; d = s && s.match(/left|up/g) ? Math.round(-1 * d) : d = Math.round(1 * d); const x = i.parent().find(m); const y = x.find(b); const T = _.direction; const L = T === 'vertical' ? y.height() : y.width(); const j = T === 'vertical' ? x.height() : x.width(); const C = T === 'vertical' ? x.find(w).first().outerHeight(!0) + _.space : x.find(w).first().outerWidth(!0) + _.space; let S = void 0 === y.data('offset') ? 0 : parseInt(y.data('offset'), 0); let k = 0; switch (n) { case 'start': i.parent().find(v).addClass('dragged'), S = T === 'vertical' ? y.position().top : y.position().left, y.data('offset', S), y.data('tmmove') && y.data('tmmove').pause(); break; case 'move': if (j >= L) return !1; k = S + d, k = k > 0 ? T === 'horizontal' ? k - y.width() * (k / y.width() * k / y.width()) : k - y.height() * (k / y.height() * k / y.height()) : k; var O = T === 'vertical' ? 0 - (y.height() - x.height()) : 0 - (y.width() - x.width()); k = O > k ? T === 'horizontal' ? k + y.width() * (k - O) / y.width() * (k - O) / y.width() : k + y.height() * (k - O) / y.height() * (k - O) / y.height() : k, T === 'vertical' ? punchgs.TweenLite.set(y, { top: `${k}px` }) : punchgs.TweenLite.set(y, { left: `${k}px` }); break; case 'end': case 'cancel': if (f) return k = S + d, k = T === 'vertical' ? k < 0 - (y.height() - x.height()) ? 0 - (y.height() - x.height()) : k : k < 0 - (y.width() - x.width()) ? 0 - (y.width() - x.width()) : k, k = k > 0 ? 0 : k, k = Math.abs(d) > C / 10 ? d <= 0 ? Math.floor(k / C) * C : Math.ceil(k / C) * C : d < 0 ? Math.ceil(k / C) * C : Math.floor(k / C) * C, k = T === 'vertical' ? k < 0 - (y.height() - x.height()) ? 0 - (y.height() - x.height()) : k : k < 0 - (y.width() - x.width()) ? 0 - (y.width() - x.width()) : k, k = k > 0 ? 0 : k, T === 'vertical' ? punchgs.TweenLite.to(y, 0.5, { top: `${k}px`, ease: punchgs.Power3.easeOut }) : punchgs.TweenLite.to(y, 0.5, { left: `${k}px`, ease: punchgs.Power3.easeOut }), k = k || (T === 'vertical' ? y.position().top : y.position().left), y.data('offset', k), y.data('distance', d), setTimeout(() => { a.dragStartedOverSlider = !1, a.dragStartedOverThumbs = !1, a.dragStartedOverTabs = !1; }, 100), i.parent().find(v).removeClass('dragged'), !1; }
        }
      },
    });
  }; var l = function (t) { t.hide_delay = jQuery.isNumeric(parseInt(t.hide_delay, 0)) ? t.hide_delay / 1e3 : 0.2, t.hide_delay_mobile = jQuery.isNumeric(parseInt(t.hide_delay_mobile, 0)) ? t.hide_delay_mobile / 1e3 : 0.2; }; var h = function (t) { return t && t.enable; }; const p = function (t) { return t && t.enable && t.hide_onleave === !0 && (void 0 === t.position ? !0 : !t.position.match(/outer/g)); }; var u = function (t, i) { const a = t.parent(); p(i.navigation.arrows) && punchgs.TweenLite.delayedCall(e ? i.navigation.arrows.hide_delay_mobile : i.navigation.arrows.hide_delay, c, [a.find('.tparrows'), i.navigation.arrows, 'hide']), p(i.navigation.bullets) && punchgs.TweenLite.delayedCall(e ? i.navigation.bullets.hide_delay_mobile : i.navigation.bullets.hide_delay, c, [a.find('.tp-bullets'), i.navigation.bullets, 'hide']), p(i.navigation.thumbnails) && punchgs.TweenLite.delayedCall(e ? i.navigation.thumbnails.hide_delay_mobile : i.navigation.thumbnails.hide_delay, c, [a.find('.tp-thumbs'), i.navigation.thumbnails, 'hide']), p(i.navigation.tabs) && punchgs.TweenLite.delayedCall(e ? i.navigation.tabs.hide_delay_mobile : i.navigation.tabs.hide_delay, c, [a.find('.tp-tabs'), i.navigation.tabs, 'hide']); }; var c = function (t, e, i, a) { switch (a = void 0 === a ? 0.5 : a, i) { case 'show': punchgs.TweenLite.to(t, a, { autoAlpha: 1, ease: punchgs.Power3.easeInOut, overwrite: 'auto' }); break; case 'hide': punchgs.TweenLite.to(t, a, { autoAlpha: 0, ease: punchgs.Power3.easeInOu, overwrite: 'auto' }); } }; var f = function (t, e, i) { e.style = void 0 === e.style ? '' : e.style, e.left.style = void 0 === e.left.style ? '' : e.left.style, e.right.style = void 0 === e.right.style ? '' : e.right.style, t.find('.tp-leftarrow.tparrows').length === 0 && t.append(`<div class="tp-leftarrow tparrows ${e.style} ${e.left.style}">${e.tmp}</div>`), t.find('.tp-rightarrow.tparrows').length === 0 && t.append(`<div class="tp-rightarrow tparrows ${e.style} ${e.right.style}">${e.tmp}</div>`); const a = t.find('.tp-leftarrow.tparrows'); const n = t.find('.tp-rightarrow.tparrows'); n.click(() => { i.sc_indicator = 'arrow', i.sc_indicator_dir = 0, t.revnext(); }), a.click(() => { i.sc_indicator = 'arrow', i.sc_indicator_dir = 1, t.revprev(); }), e.right.j = t.find('.tp-rightarrow.tparrows'), e.left.j = t.find('.tp-leftarrow.tparrows'), e.padding_top = parseInt(i.carousel.padding_top || 0, 0), e.padding_bottom = parseInt(i.carousel.padding_bottom || 0, 0), m(a, e.left), m(n, e.right), (e.position == 'outer-left' || e.position == 'outer-right') && (i.outernav = !0); }; const g = function (t, e) { const i = t.outerHeight(!0); const a = (t.outerWidth(!0), e.v_align === 'top' ? { top: '0px', y: `${Math.round(e.v_offset)}px` } : e.v_align === 'center' ? { top: '50%', y: `${Math.round(0 - i / 2 + e.v_offset)}px` } : { top: '100%', y: `${Math.round(0 - (i + e.v_offset))}px` }); t.hasClass('outer-bottom') || punchgs.TweenLite.set(t, a); }; const v = function (t, e) { const i = (t.outerHeight(!0), t.outerWidth(!0)); const a = e.h_align === 'left' ? { left: '0px', x: `${Math.round(e.h_offset)}px` } : e.h_align === 'center' ? { left: '50%', x: `${Math.round(0 - i / 2 + e.h_offset)}px` } : { left: '100%', x: `${Math.round(0 - (i + e.h_offset))}px` }; punchgs.TweenLite.set(t, a); }; var m = function (t, e) {
    const i = t.closest('.tp-simpleresponsive').length > 0 ? t.closest('.tp-simpleresponsive') : t.closest('.tp-revslider-mainul').length > 0 ? t.closest('.tp-revslider-mainul') : t.closest('.rev_slider_wrapper').length > 0 ? t.closest('.rev_slider_wrapper') : t.parent().find('.tp-revslider-mainul'); const a = i.width(); const n = i.height(); if (g(t, e), v(t, e), e.position !== 'outer-left' || e.sliderLayout != 'fullwidth' && e.sliderLayout != 'fullscreen' ? e.position !== 'outer-right' || e.sliderLayout != 'fullwidth' && e.sliderLayout != 'fullscreen' || punchgs.TweenLite.set(t, { right: `${0 - t.outerWidth()}px`, x: `${e.h_offset}px` }) : punchgs.TweenLite.set(t, { left: `${0 - t.outerWidth()}px`, x: `${e.h_offset}px` }), t.hasClass('tp-thumbs') || t.hasClass('tp-tabs')) {
      const r = t.data('wr_padding'); const s = t.data('maxw'); const o = t.data('maxh'); const d = t.find(t.hasClass('tp-thumbs') ? '.tp-thumb-mask' : '.tp-tab-mask'); let l = parseInt(e.padding_top || 0, 0); let h = parseInt(e.padding_bottom || 0, 0); s > a && e.position !== 'outer-left' && e.position !== 'outer-right' ? (punchgs.TweenLite.set(t, { left: '0px', x: 0, maxWidth: `${a - 2 * r}px` }), punchgs.TweenLite.set(d, { maxWidth: `${a - 2 * r}px` })) : (punchgs.TweenLite.set(t, { maxWidth: `${s}px` }), punchgs.TweenLite.set(d, { maxWidth: `${s}px` })), o + 2 * r > n && e.position !== 'outer-bottom' && e.position !== 'outer-top' ? (punchgs.TweenLite.set(t, { top: '0px', y: 0, maxHeight: `${l + h + (n - 2 * r)}px` }), punchgs.TweenLite.set(d, { maxHeight: `${l + h + (n - 2 * r)}px` })) : (punchgs.TweenLite.set(t, { maxHeight: `${o}px` }), punchgs.TweenLite.set(d, { maxHeight: `${o}px` })), e.position !== 'outer-left' && e.position !== 'outer-right' && (l = 0, h = 0), e.span === !0 && e.direction === 'vertical' ? (punchgs.TweenLite.set(t, {
        maxHeight: `${l + h + (n - 2 * r)}px`, height: `${l + h + (n - 2 * r)}px`, top: 0 - l, y: 0,
      }), g(d, e)) : e.span === !0 && e.direction === 'horizontal' && (punchgs.TweenLite.set(t, {
        maxWidth: '100%', width: `${a - 2 * r}px`, left: 0, x: 0,
      }), v(d, e));
    }
  }; var b = function (t, e, i, a) { t.find('.tp-bullets').length === 0 && (e.style = void 0 === e.style ? '' : e.style, t.append(`<div class="tp-bullets ${e.style} ${e.direction}"></div>`)); const n = t.find('.tp-bullets'); const r = i.data('index'); let s = e.tmp; jQuery.each(a.thumbs[i.index()].params, (t, e) => { s = s.replace(e.from, e.to); }), n.append(`<div class="justaddedbullet tp-bullet">${s}</div>`); const o = t.find('.justaddedbullet'); const d = t.find('.tp-bullet').length; const l = o.outerWidth() + parseInt(void 0 === e.space ? 0 : e.space, 0); const h = o.outerHeight() + parseInt(void 0 === e.space ? 0 : e.space, 0); e.direction === 'vertical' ? (o.css({ top: `${(d - 1) * h}px`, left: '0px' }), n.css({ height: (d - 1) * h + o.outerHeight(), width: o.outerWidth() })) : (o.css({ left: `${(d - 1) * l}px`, top: '0px' }), n.css({ width: (d - 1) * l + o.outerWidth(), height: o.outerHeight() })), o.find('.tp-bullet-image').css({ backgroundImage: `url(${a.thumbs[i.index()].src})` }), o.data('liref', r), o.click(function () { a.sc_indicator = 'bullet', t.revcallslidewithid(r), t.find('.tp-bullet').removeClass('selected'), jQuery(this).addClass('selected'); }), o.removeClass('justaddedbullet'), e.padding_top = parseInt(a.carousel.padding_top || 0, 0), e.padding_bottom = parseInt(a.carousel.padding_bottom || 0, 0), (e.position == 'outer-left' || e.position == 'outer-right') && (a.outernav = !0), m(n, e); }; const w = function (t, e) { e = parseFloat(e), t = t.replace('#', ''); const i = parseInt(t.substring(0, 2), 16); const a = parseInt(t.substring(2, 4), 16); const n = parseInt(t.substring(4, 6), 16); const r = `rgba(${i},${a},${n},${e})`; return r; }; var _ = function (t, e, i, a, n) {
    const r = a === 'tp-thumb' ? '.tp-thumbs' : '.tp-tabs'; const s = a === 'tp-thumb' ? '.tp-thumb-mask' : '.tp-tab-mask'; const o = a === 'tp-thumb' ? '.tp-thumbs-inner-wrapper' : '.tp-tabs-inner-wrapper'; const d = a === 'tp-thumb' ? '.tp-thumb' : '.tp-tab'; const
      l = a === 'tp-thumb' ? '.tp-thumb-image' : '.tp-tab-image'; if (e.visibleAmount = e.visibleAmount > n.slideamount ? n.slideamount : e.visibleAmount, e.sliderLayout = n.sliderLayout, t.parent().find(r).length === 0) {
      e.style = void 0 === e.style ? '' : e.style; const h = e.span === !0 ? 'tp-span-wrapper' : ''; const
        p = `<div class="${a}s ${h} ${e.position} ${e.style}"><div class="${a}-mask"><div class="${a}s-inner-wrapper" style="position:relative;"></div></div></div>`; e.position === 'outer-top' ? t.parent().prepend(p) : e.position === 'outer-bottom' ? t.after(p) : t.append(p), e.padding_top = parseInt(n.carousel.padding_top || 0, 0), e.padding_bottom = parseInt(n.carousel.padding_bottom || 0, 0), (e.position == 'outer-left' || e.position == 'outer-right') && (n.outernav = !0);
    } const u = i.data('index'); const c = t.parent().find(r); const f = c.find(s); const g = f.find(o); const v = e.direction === 'horizontal' ? e.width * e.visibleAmount + e.space * (e.visibleAmount - 1) : e.width; const b = e.direction === 'horizontal' ? e.height : e.height * e.visibleAmount + e.space * (e.visibleAmount - 1); let _ = e.tmp; jQuery.each(n.thumbs[i.index()].params, (t, e) => { _ = _.replace(e.from, e.to); }), g.append(`<div data-liindex="${i.index()}" data-liref="${u}" class="justaddedthumb ${a}" style="width:${e.width}px;height:${e.height}px;">${_}</div>`); const x = c.find('.justaddedthumb'); const y = c.find(d).length; const T = x.outerWidth() + parseInt(void 0 === e.space ? 0 : e.space, 0); const L = x.outerHeight() + parseInt(void 0 === e.space ? 0 : e.space, 0); x.find(l).css({ backgroundImage: `url(${n.thumbs[i.index()].src})` }), e.direction === 'vertical' ? (x.css({ top: `${(y - 1) * L}px`, left: '0px' }), g.css({ height: (y - 1) * L + x.outerHeight(), width: x.outerWidth() })) : (x.css({ left: `${(y - 1) * T}px`, top: '0px' }), g.css({ width: (y - 1) * T + x.outerWidth(), height: x.outerHeight() })), c.data('maxw', v), c.data('maxh', b), c.data('wr_padding', e.wrapper_padding); const j = e.position === 'outer-top' || e.position === 'outer-bottom' ? 'relative' : 'absolute'; const
      C = e.position !== 'outer-top' && e.position !== 'outer-bottom' || e.h_align !== 'center' ? '0' : 'auto'; f.css({
      maxWidth: `${v}px`, maxHeight: `${b}px`, overflow: 'hidden', position: 'relative',
    }), c.css({
      maxWidth: `${v}px`, margin: C, maxHeight: `${b}px`, overflow: 'visible', position: j, background: w(e.wrapper_color, e.wrapper_opacity), padding: `${e.wrapper_padding}px`, boxSizing: 'contet-box',
    }), x.click(function () { n.sc_indicator = 'bullet'; let e = t.parent().find(o).data('distance'); e = void 0 === e ? 0 : e, Math.abs(e) < 10 && (t.revcallslidewithid(u), t.parent().find(r).removeClass('selected'), jQuery(this).addClass('selected')); }), x.removeClass('justaddedthumb'), m(c, e);
  }; var x = function (t) { const e = t.c.parent().find('.outer-top'); const i = t.c.parent().find('.outer-bottom'); t.top_outer = e.hasClass('tp-forcenotvisible') ? 0 : e.outerHeight() || 0, t.bottom_outer = i.hasClass('tp-forcenotvisible') ? 0 : i.outerHeight() || 0; }; var y = function (t, e, i, a) { e > i || i > a ? t.addClass('tp-forcenotvisible') : t.removeClass('tp-forcenotvisible'); };
}(jQuery));
