/** ******************************************
 * REVOLUTION 5.0 EXTENSION - LAYER ANIMATION
 * @version: 1.3 (26.11.2015)
 * @requires jquery.themepunch.revolution.js
 * @author ThemePunch
******************************************** */

!(function (a) {
  function e(a, e, t, i, n, o, r) { const d = a.find(e); d.css('borderWidth', `${o}px`), d.css(t, `${0 - o}px`), d.css(i, '0px solid transparent'), d.css(n, r); } const t = jQuery.fn.revolution; t.is_mobile(); jQuery.extend(!0, t, {
    animcompleted(a, e) { const i = a.data('videotype'); const n = a.data('autoplay'); const o = a.data('autoplayonlyfirsttime'); void 0 != i && i != 'none' && (n == 1 || n == 'true' || n == 'on' || n == '1sttime' || o ? (t.playVideo(a, e), t.toggleState(a.data('videotoggledby')), (o || n == '1sttime') && (a.data('autoplayonlyfirsttime', !1), a.data('autoplay', 'off'))) : (n == 'no1sttime' && a.data('autoplay', 'on'), t.unToggleState(a.data('videotoggledby')))); },
    handleStaticLayers(a, e) { let t = parseInt(a.data('startslide'), 0); let i = parseInt(a.data('endslide'), 0); t < 0 && (t = 0), i < 0 && (i = e.slideamount), t === 0 && i === e.slideamount - 1 && (i = e.slideamount + 1), a.data('startslide', t), a.data('endslide', i); },
    animateTheCaptions(a, e, i, n) { const o = e.sliderType === 'carousel' ? 0 : e.width / 2 - e.gridwidth[e.curWinRange] * e.bw / 2; const r = 0; const d = a.data('index'); e.layers = e.layers || new Object(), e.layers[d] = e.layers[d] || a.find('.tp-caption'), e.layers.static = e.layers.static || e.c.find('.tp-static-layers').find('.tp-caption'); const s = []; if (e.conh = e.c.height(), e.conw = e.c.width(), e.ulw = e.ul.width(), e.ulh = e.ul.height(), e.debugMode) { a.addClass('indebugmode'), a.find('.helpgrid').remove(), e.c.find('.hglayerinfo').remove(), a.append(`<div class="helpgrid" style="width:${e.gridwidth[e.curWinRange] * e.bw}px;height:${e.gridheight[e.curWinRange] * e.bw}px;"></div>`); const l = a.find('.helpgrid'); l.append(`<div class="hginfo">Zoom:${Math.round(100 * e.bw)}% &nbsp;&nbsp;&nbsp; Device Level:${e.curWinRange}&nbsp;&nbsp;&nbsp; Grid Preset:${e.gridwidth[e.curWinRange]}x${e.gridheight[e.curWinRange]}</div>`), e.c.append('<div class="hglayerinfo"></div>'), l.append('<div class="tlhg"></div>'); }s && jQuery.each(s, function (a) { const e = jQuery(this); punchgs.TweenLite.set(e.find('.tp-videoposter'), { autoAlpha: 1 }), punchgs.TweenLite.set(e.find('iframe'), { autoAlpha: 0 }); }), e.layers[d] && jQuery.each(e.layers[d], (a, e) => { s.push(e); }), e.layers.static && jQuery.each(e.layers.static, (a, e) => { s.push(e); }), s && jQuery.each(s, function (a) { t.animateSingleCaption(jQuery(this), e, o, r, a, i); }); const p = jQuery('body').find(`#${e.c.attr('id')}`).find('.tp-bannertimer'); p.data('opt', e), void 0 != n && setTimeout(() => { n.resume(); }, 30); },
    animateSingleCaption(a, n, r, u, w, y, b) {
      let x = y; let T = h(a, n, 'in', !0); const L = a.data('_pw') || a.closest('.tp-parallax-wrap'); const W = a.data('_lw') || a.closest('.tp-loop-wrap'); const C = a.data('_mw') || a.closest('.tp-mask-wrap'); const j = a.data('responsive') || 'on'; const I = a.data('responsive_offset') || 'on'; const R = a.data('basealign') || 'grid'; const k = R === 'grid' ? n.width : n.ulw; const _ = R === 'grid' ? n.height : n.ulh; const S = jQuery('body').hasClass('rtl'); if (a.data('_pw') || (a.data('_pw', L), a.data('_lw', W), a.data('_mw', C)), n.sliderLayout == 'fullscreen' && (u = _ / 2 - n.gridheight[n.curWinRange] * n.bh / 2), (n.autoHeight == 'on' || void 0 != n.minHeight && n.minHeight > 0) && (u = n.conh / 2 - n.gridheight[n.curWinRange] * n.bh / 2), u < 0 && (u = 0), n.debugMode) { a.closest('li').find('.helpgrid').css({ top: `${u}px`, left: `${r}px` }); const z = n.c.find('.hglayerinfo'); a.on('hover, mouseenter', () => { let e = ''; a.data() && jQuery.each(a.data(), (a, t) => { typeof t !== 'object' && (e = `${e}<span style="white-space:nowrap"><span style="color:#27ae60">${a}:</span>${t}</span>&nbsp; &nbsp; `); }), z.html(e); }); } const Q = p(a.data('visibility'), n)[n.forcedWinRange] || p(a.data('visibility'), n) || 'on'; if (Q == 'off' || k < n.hideCaptionAtLimit && a.data('captionhidden') == 'on' || k < n.hideAllCaptionAtLimit ? a.addClass('tp-hidden-caption') : a.removeClass('tp-hidden-caption'), a.data('layertype', 'html'), r < 0 && (r = 0), void 0 != a.data('thumbimage') && void 0 == a.data('videoposter') && a.data('videoposter', a.data('thumbimage')), a.find('img').length > 0) { var M = a.find('img'); a.data('layertype', 'image'), M.width() == 0 && M.css({ width: 'auto' }), M.height() == 0 && M.css({ height: 'auto' }), void 0 == M.data('ww') && M.width() > 0 && M.data('ww', M.width()), void 0 == M.data('hh') && M.height() > 0 && M.data('hh', M.height()); var O = M.data('ww'); var H = M.data('hh'); const B = R == 'slide' ? n.ulw : n.gridwidth[n.curWinRange]; const A = R == 'slide' ? n.ulh : n.gridheight[n.curWinRange]; var O = p(M.data('ww'), n)[n.curWinRange] || p(M.data('ww'), n) || 'auto'; var H = p(M.data('hh'), n)[n.curWinRange] || p(M.data('hh'), n) || 'auto'; const F = O === 'full' || O === 'full-proportional'; const D = H === 'full' || H === 'full-proportional'; if (O === 'full-proportional') { const P = M.data('owidth'); const X = M.data('oheight'); X / A > P / B ? (O = B, H = X * (B / P)) : (H = A, O = P * (A / X)); } else O = F ? B : parseFloat(O), H = D ? A : parseFloat(H); void 0 == O && (O = 0), void 0 == H && (H = 0), j !== 'off' ? (R != 'grid' && F ? M.width(O) : M.width(O * n.bw), R != 'grid' && D ? M.height(H) : M.height(H * n.bh)) : (M.width(O), M.height(H)); } if (R === 'slide' && (r = 0, u = 0), a.hasClass('tp-videolayer') || a.find('iframe').length > 0 || a.find('video').length > 0) {
        if (a.data('layertype', 'video'), t.manageVideoLayer(a, n, y, x), !y && !x) { a.data('videotype'); t.resetVideo(a, n); } const Y = a.data('aspectratio'); void 0 != Y && Y.split(':').length > 1 && t.prepareCoveredVideo(Y, n, a); var M = a.find('iframe') ? a.find('iframe') : M = a.find('video'); const V = a.find('iframe') ? !1 : !0; const N = a.hasClass('coverscreenvideo'); M.css({ display: 'block' }), void 0 == a.data('videowidth') && (a.data('videowidth', M.width()), a.data('videoheight', M.height())); let Z; var O = p(a.data('videowidth'), n)[n.curWinRange] || p(a.data('videowidth'), n) || 'auto'; var H = p(a.data('videoheight'), n)[n.curWinRange] || p(a.data('videoheight'), n) || 'auto'; O = parseFloat(O), H = parseFloat(H), void 0 === a.data('cssobj') && (Z = g(a, 0), a.data('cssobj', Z)); const $ = m(a.data('cssobj'), n); if ($.lineHeight == 'auto' && ($.lineHeight = $.fontSize + 4), a.hasClass('fullscreenvideo') || N) { r = 0, u = 0, a.data('x', 0), a.data('y', 0); let G = _; n.autoHeight == 'on' && (G = n.conh), a.css({ width: k, height: G }); } else {
          punchgs.TweenLite.set(a, {
            paddingTop: `${Math.round($.paddingTop * n.bh)}px`, paddingBottom: `${Math.round($.paddingBottom * n.bh)}px`, paddingLeft: `${Math.round($.paddingLeft * n.bw)}px`, paddingRight: `${Math.round($.paddingRight * n.bw)}px`, marginTop: `${$.marginTop * n.bh}px`, marginBottom: `${$.marginBottom * n.bh}px`, marginLeft: `${$.marginLeft * n.bw}px`, marginRight: `${$.marginRight * n.bw}px`, borderTopWidth: `${Math.round($.borderTopWidth * n.bh)}px`, borderBottomWidth: `${Math.round($.borderBottomWidth * n.bh)}px`, borderLeftWidth: `${Math.round($.borderLeftWidth * n.bw)}px`, borderRightWidth: `${Math.round($.borderRightWidth * n.bw)}px`, width: `${O * n.bw}px`, height: `${H * n.bh}px`,
          });
        } (V == 0 && !N || a.data('forcecover') != 1 && !a.hasClass('fullscreenvideo') && !N) && (M.width(O * n.bw), M.height(H * n.bh));
      }a.find('.tp-resizeme, .tp-resizeme *').each(function () { v(jQuery(this), n, 'rekursive', j); }), a.hasClass('tp-resizeme') && a.find('*').each(function () { v(jQuery(this), n, 'rekursive', j); }), v(a, n, 0, j); const U = a.outerHeight(); const q = a.css('backgroundColor'); e(a, '.frontcorner', 'left', 'borderRight', 'borderTopColor', U, q), e(a, '.frontcornertop', 'left', 'borderRight', 'borderBottomColor', U, q), e(a, '.backcorner', 'right', 'borderLeft', 'borderBottomColor', U, q), e(a, '.backcornertop', 'right', 'borderLeft', 'borderTopColor', U, q), n.fullScreenAlignForce == 'on' && (r = 0, u = 0); var E = a.data('arrobj'); if (void 0 === E) { var E = new Object(); E.voa = p(a.data('voffset'), n)[n.curWinRange] || p(a.data('voffset'), n)[0], E.hoa = p(a.data('hoffset'), n)[n.curWinRange] || p(a.data('hoffset'), n)[0], E.elx = p(a.data('x'), n)[n.curWinRange] || p(a.data('x'), n)[0], E.ely = p(a.data('y'), n)[n.curWinRange] || p(a.data('y'), n)[0]; } const J = E.voa.length == 0 ? 0 : E.voa; const K = E.hoa.length == 0 ? 0 : E.hoa; let aa = E.elx.length == 0 ? 0 : E.elx; let ea = E.ely.length == 0 ? 0 : E.ely; let ta = a.outerWidth(!0); let ia = a.outerHeight(!0); ta == 0 && ia == 0 && (ta = n.ulw, ia = n.ulh); const na = I !== 'off' ? parseInt(J, 0) * n.bw : parseInt(J, 0); const oa = I !== 'off' ? parseInt(K, 0) * n.bw : parseInt(K, 0); let ra = R === 'grid' ? n.gridwidth[n.curWinRange] * n.bw : k; let da = R === 'grid' ? n.gridheight[n.curWinRange] * n.bw : _; n.fullScreenAlignForce == 'on' && (ra = n.ulw, da = n.ulh), aa = aa === 'center' || aa === 'middle' ? ra / 2 - ta / 2 + oa : aa === 'left' ? oa : aa === 'right' ? ra - ta - oa : I !== 'off' ? aa * n.bw : aa, ea = ea == 'center' || ea == 'middle' ? da / 2 - ia / 2 + na : ea == 'top' ? na : ea == 'bottom' ? da - ia - na : I !== 'off' ? ea * n.bw : ea, S && (aa += ta); const sa = a.data('lasttriggerstate'); let la = a.data('triggerstate'); const pa = a.data('start') || 100; const ha = a.data('end'); let ca = b ? 0 : pa === 'bytrigger' || pa === 'sliderenter' ? 0 : parseFloat(pa) / 1e3; const ga = aa + r; const ma = ea + u; const ua = a.css('z-Index'); b || (sa == 'reset' && pa != 'bytrigger' ? (a.data('triggerstate', 'on'), a.data('animdirection', 'in'), la = 'on') : sa == 'reset' && pa == 'bytrigger' && (a.data('triggerstate', 'off'), a.data('animdirection', 'out'), la = 'off')), punchgs.TweenLite.set(L, {
        zIndex: ua, top: ma, left: ga, overwrite: 'auto',
      }), T == 0 && (x = !0), void 0 == a.data('timeline') || x || (T != 2 && a.data('timeline').gotoAndPlay(0), x = !0), !y && a.data('timeline_out') && T != 2 && T != 0 && (a.data('timeline_out').kill(), a.data('outstarted', 0)), b && void 0 != a.data('timeline') && (a.removeData('$anims'), a.data('timeline').pause(0), a.data('timeline').kill(), void 0 != a.data('newhoveranim') && (a.data('newhoveranim').progress(0), a.data('newhoveranim').kill()), a.removeData('timeline'), punchgs.TweenLite.killTweensOf(a), a.unbind('hover'), a.removeClass('rs-hover-ready'), a.removeData('newhoveranim')); const va = a.data('timeline') ? a.data('timeline').time() : 0; let fa = void 0 !== a.data('timeline') ? a.data('timeline').progress() : 0; let wa = a.data('timeline') || new punchgs.TimelineLite({ smoothChildTiming: !0 }); if (fa = jQuery.isNumeric(fa) ? fa : 0, wa.pause(), fa < 1 && a.data('outstarted') != 1 || T == 2 || b) {
        let ya = a; if (void 0 != a.data('mySplitText') && a.data('mySplitText').revert(), void 0 != a.data('splitin') && a.data('splitin').match(/chars|words|lines/g) || void 0 != a.data('splitout') && a.data('splitout').match(/chars|words|lines/g)) {
          const ba = a.find('a').length > 0 ? a.find('a') : a; a.data('mySplitText', new punchgs.SplitText(ba, {
            type: 'lines,words,chars', charsClass: 'tp-splitted', wordsClass: 'tp-splitted', linesClass: 'tp-splitted',
          })), a.addClass('splitted');
        } void 0 !== a.data('mySplitText') && a.data('splitin') && a.data('splitin').match(/chars|words|lines/g) && (ya = a.data('mySplitText')[a.data('splitin')]); let xa = new Object(); const
          Ta = void 0 != a.data('transform_in') ? a.data('transform_in').match(/\(R\)/gi) : !1; if (!a.data('$anims') || b || Ta) { var La = i(); let Wa = i(); let Ca = o(); const ja = void 0 !== a.data('transform_hover') || void 0 !== a.data('style_hover'); Wa = s(Wa, a.data('transform_idle')), La = s(Wa, a.data('transform_in'), n.sdir == 1), ja && (Ca = s(Ca, a.data('transform_hover')), Ca = c(Ca, a.data('style_hover')), a.data('hover', Ca)), La.elemdelay = void 0 == a.data('elementdelay') ? 0 : a.data('elementdelay'), Wa.anim.ease = La.anim.ease = La.anim.ease || punchgs.Power1.easeInOut, ja && !a.hasClass('rs-hover-ready') && (a.addClass('rs-hover-ready'), a.hover((a) => { const e = jQuery(a.currentTarget); const t = e.data('hover'); const i = e.data('timeline'); i && i.progress() == 1 && (void 0 === e.data('newhoveranim') || e.data('newhoveranim') === 'none' ? e.data('newhoveranim', punchgs.TweenLite.to(e, t.speed, t.anim)) : (e.data('newhoveranim').progress(0), e.data('newhoveranim').play())); }, (a) => { const e = jQuery(a.currentTarget); const t = e.data('timeline'); t && t.progress() == 1 && void 0 != e.data('newhoveranim') && e.data('newhoveranim').reverse(); })), xa = new Object(), xa.f = La, xa.r = Wa, a.data('$anims'); } else xa = a.data('$anims'); const Ia = l(a.data('mask_in')); const Ra = new punchgs.TimelineLite(); if (xa.f.anim.x = xa.f.anim.x * n.bw || d(xa.f.anim.x, n, ta, ia, ma, ga, 'horizontal'), xa.f.anim.y = xa.f.anim.y * n.bw || d(xa.f.anim.y, n, ta, ia, ma, ga, 'vertical'), T != 2 || b) { if (ya != a) { const ka = xa.r.anim.ease; wa.add(punchgs.TweenLite.set(a, xa.r.anim)), xa.r = i(), xa.r.anim.ease = ka; } if (xa.f.anim.visibility = 'hidden', Ra.eventCallback('onStart', () => { punchgs.TweenLite.set(a, { visibility: 'visible' }), a.data('iframes') && a.find('iframe').each(function () { punchgs.TweenLite.set(jQuery(this), { autoAlpha: 1 }); }), punchgs.TweenLite.set(L, { visibility: 'visible' }); const e = {}; e.layer = a, e.eventtype = 'enterstage', e.layertype = a.data('layertype'), e.layersettings = a.data(), n.c.trigger('revolution.layeraction', e); }), Ra.eventCallback('onComplete', () => { const e = {}; e.layer = a, e.eventtype = 'enteredstage', e.layertype = a.data('layertype'), e.layersettings = a.data(), n.c.trigger('revolution.layeraction', e), t.animcompleted(a, n); }), pa == 'sliderenter' && n.overcontainer && (ca = 0.6), wa.add(Ra.staggerFromTo(ya, xa.f.speed, xa.f.anim, xa.r.anim, xa.f.elemdelay), ca), Ia) { const _a = new Object(); _a.ease = xa.r.anim.ease, _a.overflow = Ia.anim.overflow = 'hidden', _a.x = _a.y = 0, Ia.anim.x = Ia.anim.x * n.bw || d(Ia.anim.x, n, ta, ia, ma, ga, 'horizontal'), Ia.anim.y = Ia.anim.y * n.bw || d(Ia.anim.y, n, ta, ia, ma, ga, 'vertical'), wa.add(punchgs.TweenLite.fromTo(C, xa.f.speed, Ia.anim, _a, La.elemdelay), ca); } else wa.add(punchgs.TweenLite.set(C, { overflow: 'visible' }, La.elemdelay), 0); }a.data('timeline', wa), n.sliderscrope = void 0 === n.sliderscrope ? Math.round(99999 * Math.random()) : n.sliderscrope, T = h(a, n, 'in'), fa !== 0 && T != 2 || ha === 'bytrigger' || b || ha == 'sliderleave' || (void 0 == ha || T != -1 && T != 2 || ha === 'bytriger' ? punchgs.TweenLite.delayedCall(999999, t.endMoveCaption, [a, C, L, n], n.sliderscrope) : punchgs.TweenLite.delayedCall(parseInt(a.data('end'), 0) / 1e3, t.endMoveCaption, [a, C, L, n], n.sliderscrope)), wa = a.data('timeline'), a.data('loopanimation') == 'on' && f(W, n.bw), (pa != 'sliderenter' || pa == 'sliderenter' && n.overcontainer) && (T == -1 || T == 1 || b || T == 0 && fa < 1 && a.hasClass('rev-static-visbile')) && (fa < 1 && fa > 0 || fa == 0 && pa != 'bytrigger' && sa != 'keep' || fa == 0 && pa != 'bytrigger' && sa == 'keep' && la == 'on' || pa == 'bytrigger' && sa == 'keep' && la == 'on') && (wa.resume(va), t.toggleState(a.data('layertoggledby')));
      }a.data('loopanimation') == 'on' && punchgs.TweenLite.set(W, { minWidth: ta, minHeight: ia }), a.data('slidelink') == 0 || a.data('slidelink') != 1 && !a.hasClass('slidelink') ? (punchgs.TweenLite.set(C, { width: 'auto', height: 'auto' }), a.data('slidelink', 0)) : (punchgs.TweenLite.set(C, { width: '100%', height: '100%' }), a.data('slidelink', 1));
    },
    endMoveCaption(a, e, t, o) {
      if (e = e || a.data('_mw'), t = t || a.data('_pw'), a.data('outstarted', 1), a.data('timeline'))a.data('timeline').pause(); else if (void 0 === a.data('_pw')) return; const r = new punchgs.TimelineLite(); const p = new punchgs.TimelineLite(); const h = new punchgs.TimelineLite(); const c = s(i(), a.data('transform_in'), o.sdir == 1); let g = a.data('transform_out') ? s(n(), a.data('transform_out'), o.sdir == 1) : s(n(), a.data('transform_in'), o.sdir == 1); const m = a.data('splitout') && a.data('splitout').match(/words|chars|lines/g) ? a.data('mySplitText')[a.data('splitout')] : a; const u = void 0 == a.data('endelementdelay') ? 0 : a.data('endelementdelay'); const v = a.innerWidth(); const f = a.innerHeight(); const
        w = t.position(); a.data('transform_out') && a.data('transform_out').match(/auto:auto/g) && (c.speed = g.speed, c.anim.ease = g.anim.ease, g = c); const y = l(a.data('mask_out')); g.anim.x = g.anim.x * o.bw || d(g.anim.x, o, v, f, w.top, w.left, 'horizontal'), g.anim.y = g.anim.y * o.bw || d(g.anim.y, o, v, f, w.top, w.left, 'vertical'), p.eventCallback('onStart', () => { const e = {}; e.layer = a, e.eventtype = 'leavestage', e.layertype = a.data('layertype'), e.layersettings = a.data(), o.c.trigger('revolution.layeraction', e); }), p.eventCallback('onComplete', () => { punchgs.TweenLite.set(a, { visibility: 'hidden' }), punchgs.TweenLite.set(t, { visibility: 'hidden' }); const e = {}; e.layer = a, e.eventtype = 'leftstage', e.layertype = a.data('layertype'), e.layersettings = a.data(), o.c.trigger('revolution.layeraction', e); }), r.add(p.staggerTo(m, g.speed, g.anim, u), 0), y ? (y.anim.ease = g.anim.ease, y.anim.overflow = 'hidden', y.anim.x = y.anim.x * o.bw || d(y.anim.x, o, v, f, w.top, w.left, 'horizontal'), y.anim.y = y.anim.y * o.bw || d(y.anim.y, o, v, f, w.top, w.left, 'vertical'), r.add(h.to(e, g.speed, y.anim, u), 0)) : r.add(h.set(e, { overflow: 'visible', overwrite: 'auto' }, u), 0), a.data('timeline_out', r);
    },
    removeTheCaptions(a, e) { const i = a.data('index'); const n = []; e.layers[i] && jQuery.each(e.layers[i], (a, e) => { n.push(e); }), e.layers.static && jQuery.each(e.layers.static, (a, e) => { n.push(e); }), punchgs.TweenLite.killDelayedCallsTo(t.endMoveCaption, !1, e.sliderscrope), n && jQuery.each(n, function (a) { const i = jQuery(this); const n = h(i, e, 'out'); n != 0 && (w(i), clearTimeout(i.data('videoplaywait')), t.stopVideo && t.stopVideo(i, e), t.endMoveCaption(i, null, null, e), e.playingvideos = [], e.lastplayedvideos = []); }); },
  }); var i = function () { const a = new Object(); return a.anim = new Object(), a.anim.x = 0, a.anim.y = 0, a.anim.z = 0, a.anim.rotationX = 0, a.anim.rotationY = 0, a.anim.rotationZ = 0, a.anim.scaleX = 1, a.anim.scaleY = 1, a.anim.skewX = 0, a.anim.skewY = 0, a.anim.opacity = 1, a.anim.transformOrigin = '50% 50%', a.anim.transformPerspective = 600, a.anim.rotation = 0, a.anim.ease = punchgs.Power3.easeOut, a.anim.force3D = 'auto', a.speed = 0.3, a.anim.autoAlpha = 1, a.anim.visibility = 'visible', a.anim.overwrite = 'all', a; }; var n = function () { const a = new Object(); return a.anim = new Object(), a.anim.x = 0, a.anim.y = 0, a.anim.z = 0, a; }; var o = function () { const a = new Object(); return a.anim = new Object(), a.speed = 0.2, a; }; const r = function (a, e) { if (jQuery.isNumeric(parseFloat(a))) return parseFloat(a); if (void 0 === a || a === 'inherit') return e; if (a.split('{').length > 1) { let t = a.split(','); const i = parseFloat(t[1].split('}')[0]); t = parseFloat(t[0].split('{')[1]), a = Math.random() * (i - t) + t; } return a; }; var d = function (a, e, t, i, n, o, r) { return !jQuery.isNumeric(a) && a.match(/%]/g) ? (a = a.split('[')[1].split(']')[0], r == 'horizontal' ? a = (t + 2) * parseInt(a, 0) / 100 : r == 'vertical' && (a = (i + 2) * parseInt(a, 0) / 100)) : (a = a === 'layer_left' ? 0 - t : a === 'layer_right' ? t : a, a = a === 'layer_top' ? 0 - i : a === 'layer_bottom' ? i : a, a = a === 'left' || a === 'stage_left' ? 0 - t - o : a === 'right' || a === 'stage_right' ? e.conw - o : a === 'center' || a === 'stage_center' ? e.conw / 2 - t / 2 - o : a, a = a === 'top' || a === 'stage_top' ? 0 - i - n : a === 'bottom' || a === 'stage_bottom' ? e.conh - n : a === 'middle' || a === 'stage_middle' ? e.conh / 2 - i / 2 - n : a), a; }; var s = function (a, e, t) { let i = new Object(); if (i = jQuery.extend(!0, {}, i, a), void 0 === e) return i; const n = e.split(';'); return n && jQuery.each(n, (a, e) => { const n = e.split(':'); const o = n[0]; let d = n[1]; t && void 0 != d && d.length > 0 && d.match(/\(R\)/) && (d = d.replace('(R)', ''), d = d === 'right' ? 'left' : d === 'left' ? 'right' : d === 'top' ? 'bottom' : d === 'bottom' ? 'top' : d, d[0] === '[' && d[1] === '-' ? d = d.replace('[-', '[') : d[0] === '[' && d[1] !== '-' ? d = d.replace('[', '[-') : d[0] === '-' ? d = d.replace('-', '') : d[0].match(/[1-9]/) && (d = `-${d}`)), void 0 != d && (d = d.replace(/\(R\)/, ''), (o == 'rotationX' || o == 'rX') && (i.anim.rotationX = `${r(d, i.anim.rotationX)}deg`), (o == 'rotationY' || o == 'rY') && (i.anim.rotationY = `${r(d, i.anim.rotationY)}deg`), (o == 'rotationZ' || o == 'rZ') && (i.anim.rotation = `${r(d, i.anim.rotationZ)}deg`), (o == 'scaleX' || o == 'sX') && (i.anim.scaleX = r(d, i.anim.scaleX)), (o == 'scaleY' || o == 'sY') && (i.anim.scaleY = r(d, i.anim.scaleY)), (o == 'opacity' || o == 'o') && (i.anim.opacity = r(d, i.anim.opacity)), (o == 'skewX' || o == 'skX') && (i.anim.skewX = r(d, i.anim.skewX)), (o == 'skewY' || o == 'skY') && (i.anim.skewY = r(d, i.anim.skewY)), o == 'x' && (i.anim.x = r(d, i.anim.x)), o == 'y' && (i.anim.y = r(d, i.anim.y)), o == 'z' && (i.anim.z = r(d, i.anim.z)), (o == 'transformOrigin' || o == 'tO') && (i.anim.transformOrigin = d.toString()), (o == 'transformPerspective' || o == 'tP') && (i.anim.transformPerspective = parseInt(d, 0)), (o == 'speed' || o == 's') && (i.speed = parseFloat(d) / 1e3), (o == 'ease' || o == 'e') && (i.anim.ease = d)); }), i; }; var l = function (a) { if (void 0 === a) return !1; const e = new Object(); e.anim = new Object(); const t = a.split(';'); return t && jQuery.each(t, (a, t) => { t = t.split(':'); const i = t[0]; const n = t[1]; i == 'x' && (e.anim.x = n), i == 'y' && (e.anim.y = n), i == 's' && (e.speed = parseFloat(n) / 1e3), (i == 'e' || i == 'ease') && (e.anim.ease = n); }), e; }; var p = function (a, e, t) { if (void 0 == a && (a = 0), !jQuery.isArray(a) && jQuery.type(a) === 'string' && (a.split(',').length > 1 || a.split('[').length > 1)) { a = a.replace('[', ''), a = a.replace(']', ''); const i = a.match(/'/g) ? a.split("',") : a.split(','); a = [], i && jQuery.each(i, (e, t) => { t = t.replace("'", ''), t = t.replace("'", ''), a.push(t); }); } else { var n = a; jQuery.isArray(a) || (a = [], a.push(n)); } var n = a[a.length - 1]; if (a.length < e.rle) for (let o = 1; o <= e.curWinRange; o++)a.push(n); return a; }; var h = function (a, e, t, i) { let n = -1; if (a.hasClass('tp-static-layer')) { const o = parseInt(a.data('startslide'), 0); const r = parseInt(a.data('endslide'), 0); const d = e.c.find('.processing-revslide').index(); let s = d != -1 ? d : e.c.find('.active-revslide').index(); s = s == -1 ? 0 : s, t === 'in' ? a.hasClass('rev-static-visbile') ? n = r == s || o > s || s > r ? 2 : 0 : s >= o && r >= s || o == s || r == s ? (i || (a.addClass('rev-static-visbile'), a.removeClass('rev-static-hidden')), n = 1) : n = 0 : a.hasClass('rev-static-visbile') ? o > s || s > r ? (n = 2, i || (a.removeClass('rev-static-visbile'), a.addClass('rev-static-hidden'))) : n = 0 : n = 2; } return n; }; var c = function (a, e) { if (void 0 === e) return a; e = e.replace('c:', 'color:'), e = e.replace('bg:', 'background-color:'), e = e.replace('bw:', 'border-width:'), e = e.replace('bc:', 'border-color:'), e = e.replace('br:', 'borderRadius:'), e = e.replace('bs:', 'border-style:'), e = e.replace('td:', 'text-decoration:'); const t = e.split(';'); return t && jQuery.each(t, (e, t) => { const i = t.split(':'); i[0].length > 0 && (a.anim[i[0]] = i[1]); }), a; }; var g = function (a, e) { let t; const i = new Object(); let n = !1; if (e == 'rekursive' && (t = a.closest('.tp-caption'), t && a.css('fontSize') === t.css('fontSize') && (n = !0)), i.basealign = a.data('basealign') || 'grid', i.fontSize = n ? void 0 === t.data('fontsize') ? parseInt(t.css('fontSize'), 0) || 0 : t.data('fontsize') : void 0 === a.data('fontsize') ? parseInt(a.css('fontSize'), 0) || 0 : a.data('fontsize'), i.fontWeight = n ? void 0 === t.data('fontweight') ? parseInt(t.css('fontWeight'), 0) || 0 : t.data('fontweight') : void 0 === a.data('fontweight') ? parseInt(a.css('fontWeight'), 0) || 0 : a.data('fontweight'), i.whiteSpace = n ? void 0 === t.data('whitespace') ? t.css('whitespace') || 'normal' : t.data('whitespace') : void 0 === a.data('whitespace') ? a.css('whitespace') || 'normal' : a.data('whitespace'), i.lineHeight = n ? void 0 === t.data('lineheight') ? parseInt(t.css('lineHeight'), 0) || 0 : t.data('lineheight') : void 0 === a.data('lineheight') ? parseInt(a.css('lineHeight'), 0) || 0 : a.data('lineheight'), i.letterSpacing = n ? void 0 === t.data('letterspacing') ? parseFloat(t.css('letterSpacing'), 0) || 0 : t.data('letterspacing') : void 0 === a.data('letterspacing') ? parseFloat(a.css('letterSpacing')) || 0 : a.data('letterspacing'), i.paddingTop = void 0 === a.data('paddingtop') ? parseInt(a.css('paddingTop'), 0) || 0 : a.data('paddingtop'), i.paddingBottom = void 0 === a.data('paddingbottom') ? parseInt(a.css('paddingBottom'), 0) || 0 : a.data('paddingbottom'), i.paddingLeft = void 0 === a.data('paddingleft') ? parseInt(a.css('paddingLeft'), 0) || 0 : a.data('paddingleft'), i.paddingRight = void 0 === a.data('paddingright') ? parseInt(a.css('paddingRight'), 0) || 0 : a.data('paddingright'), i.marginTop = void 0 === a.data('margintop') ? parseInt(a.css('marginTop'), 0) || 0 : a.data('margintop'), i.marginBottom = void 0 === a.data('marginbottom') ? parseInt(a.css('marginBottom'), 0) || 0 : a.data('marginbottom'), i.marginLeft = void 0 === a.data('marginleft') ? parseInt(a.css('marginLeft'), 0) || 0 : a.data('marginleft'), i.marginRight = void 0 === a.data('marginright') ? parseInt(a.css('marginRight'), 0) || 0 : a.data('marginright'), i.borderTopWidth = void 0 === a.data('bordertopwidth') ? parseInt(a.css('borderTopWidth'), 0) || 0 : a.data('bordertopwidth'), i.borderBottomWidth = void 0 === a.data('borderbottomwidth') ? parseInt(a.css('borderBottomWidth'), 0) || 0 : a.data('borderbottomwidth'), i.borderLeftWidth = void 0 === a.data('borderleftwidth') ? parseInt(a.css('borderLeftWidth'), 0) || 0 : a.data('borderleftwidth'), i.borderRightWidth = void 0 === a.data('borderrightwidth') ? parseInt(a.css('borderRightWidth'), 0) || 0 : a.data('borderrightwidth'), e != 'rekursive') { if (i.color = void 0 === a.data('color') ? 'nopredefinedcolor' : a.data('color'), i.whiteSpace = n ? void 0 === t.data('whitespace') ? t.css('whiteSpace') || 'nowrap' : t.data('whitespace') : void 0 === a.data('whitespace') ? a.css('whiteSpace') || 'nowrap' : a.data('whitespace'), i.minWidth = void 0 === a.data('width') ? parseInt(a.css('minWidth'), 0) || 0 : a.data('width'), i.minHeight = void 0 === a.data('height') ? parseInt(a.css('minHeight'), 0) || 0 : a.data('height'), void 0 != a.data('videowidth') && void 0 != a.data('videoheight')) { let o = a.data('videowidth'); let r = a.data('videoheight'); o = o === '100%' ? 'none' : o, r = r === '100%' ? 'none' : r, a.data('width', o), a.data('height', r); }i.maxWidth = void 0 === a.data('width') ? parseInt(a.css('maxWidth'), 0) || 'none' : a.data('width'), i.maxHeight = void 0 === a.data('height') ? parseInt(a.css('maxHeight'), 0) || 'none' : a.data('height'), i.wan = void 0 === a.data('wan') ? parseInt(a.css('-webkit-transition'), 0) || 'none' : a.data('wan'), i.moan = void 0 === a.data('moan') ? parseInt(a.css('-moz-animation-transition'), 0) || 'none' : a.data('moan'), i.man = void 0 === a.data('man') ? parseInt(a.css('-ms-animation-transition'), 0) || 'none' : a.data('man'), i.ani = void 0 === a.data('ani') ? parseInt(a.css('transition'), 0) || 'none' : a.data('ani'); } return i.styleProps = a.css(['background-color', 'border-top-color', 'border-bottom-color', 'border-right-color', 'border-left-color', 'border-top-style', 'border-bottom-style', 'border-left-style', 'border-right-style', 'border-left-width', 'border-right-width', 'border-bottom-width', 'border-top-width', 'color', 'text-decoration', 'font-style', 'border-radius']), i; }; var m = function (a, e) { const t = new Object(); return a && jQuery.each(a, (i, n) => { t[i] = p(n, e)[e.curWinRange] || a[i]; }), t; }; const u = function (a, e, t, i) { return a = jQuery.isNumeric(a) ? `${a * e}px` : a, a = a === 'full' ? i : a === 'auto' || a === 'none' ? t : a; }; var v = function (a, e, t, i) {
    let n; void 0 === a.data('cssobj') ? (n = g(a, t), a.data('cssobj', n)) : n = a.data('cssobj'); const o = m(n, e); let r = e.bw; let d = e.bh; if (i === 'off' && (r = 1, d = 1), o.lineHeight == 'auto' && (o.lineHeight = o.fontSize + 4), !a.hasClass('tp-splitted')) {
      a.css('-webkit-transition', 'none'), a.css('-moz-transition', 'none'), a.css('-ms-transition', 'none'), a.css('transition', 'none'); const s = void 0 !== a.data('transform_hover') || void 0 !== a.data('style_hover'); if (s && punchgs.TweenLite.set(a, o.styleProps), punchgs.TweenLite.set(a, {
        fontSize: `${Math.round(o.fontSize * r)}px`, fontWeight: o.fontWeight, letterSpacing: `${Math.floor(o.letterSpacing * r)}px`, paddingTop: `${Math.round(o.paddingTop * d)}px`, paddingBottom: `${Math.round(o.paddingBottom * d)}px`, paddingLeft: `${Math.round(o.paddingLeft * r)}px`, paddingRight: `${Math.round(o.paddingRight * r)}px`, marginTop: `${o.marginTop * d}px`, marginBottom: `${o.marginBottom * d}px`, marginLeft: `${o.marginLeft * r}px`, marginRight: `${o.marginRight * r}px`, borderTopWidth: `${Math.round(o.borderTopWidth * d)}px`, borderBottomWidth: `${Math.round(o.borderBottomWidth * d)}px`, borderLeftWidth: `${Math.round(o.borderLeftWidth * r)}px`, borderRightWidth: `${Math.round(o.borderRightWidth * r)}px`, lineHeight: `${Math.round(o.lineHeight * d)}px`, overwrite: 'auto',
      }), t != 'rekursive') {
        const l = o.basealign == 'slide' ? e.ulw : e.gridwidth[e.curWinRange]; const p = o.basealign == 'slide' ? e.ulh : e.gridheight[e.curWinRange]; const h = u(o.maxWidth, r, 'none', l); const c = u(o.maxHeight, d, 'none', p); const v = u(o.minWidth, r, '0px', l); const f = u(o.minHeight, d, '0px', p); punchgs.TweenLite.set(a, {
          maxWidth: h, maxHeight: c, minWidth: v, minHeight: f, whiteSpace: o.whiteSpace, overwrite: 'auto',
        }), o.color != 'nopredefinedcolor' && punchgs.TweenLite.set(a, { color: o.color, overwrite: 'auto' });
      }setTimeout(() => { a.css('-webkit-transition', a.data('wan')), a.css('-moz-transition', a.data('moan')), a.css('-ms-transition', a.data('man')), a.css('transition', a.data('ani')); }, 30);
    }
  }; var f = function (a, e) {
    if (a.hasClass('rs-pendulum') && void 0 == a.data('loop-timeline')) { a.data('loop-timeline', new punchgs.TimelineLite()); var t = void 0 == a.data('startdeg') ? -20 : a.data('startdeg'); var i = void 0 == a.data('enddeg') ? 20 : a.data('enddeg'); var n = void 0 == a.data('speed') ? 2 : a.data('speed'); var o = void 0 == a.data('origin') ? '50% 50%' : a.data('origin'); var r = void 0 == a.data('easing') ? punchgs.Power2.easeInOut : a.data('ease'); t *= e, i *= e, a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', rotation: t, transformOrigin: o }, { rotation: i, ease: r })), a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', rotation: i, transformOrigin: o }, { rotation: t, ease: r, onComplete() { a.data('loop-timeline').restart(); } })); } if (a.hasClass('rs-rotate') && void 0 == a.data('loop-timeline')) { a.data('loop-timeline', new punchgs.TimelineLite()); var t = void 0 == a.data('startdeg') ? 0 : a.data('startdeg'); var i = void 0 == a.data('enddeg') ? 360 : a.data('enddeg'); n = void 0 == a.data('speed') ? 2 : a.data('speed'), o = void 0 == a.data('origin') ? '50% 50%' : a.data('origin'), r = void 0 == a.data('easing') ? punchgs.Power2.easeInOut : a.data('easing'), t *= e, i *= e, a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', rotation: t, transformOrigin: o }, { rotation: i, ease: r, onComplete() { a.data('loop-timeline').restart(); } })); } if (a.hasClass('rs-slideloop') && void 0 == a.data('loop-timeline')) { a.data('loop-timeline', new punchgs.TimelineLite()); let d = void 0 == a.data('xs') ? 0 : a.data('xs'); let s = void 0 == a.data('ys') ? 0 : a.data('ys'); let l = void 0 == a.data('xe') ? 0 : a.data('xe'); let p = void 0 == a.data('ye') ? 0 : a.data('ye'); var n = void 0 == a.data('speed') ? 2 : a.data('speed'); var r = void 0 == a.data('easing') ? punchgs.Power2.easeInOut : a.data('easing'); d *= e, s *= e, l *= e, p *= e, a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', x: d, y: s }, { x: l, y: p, ease: r })), a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', x: l, y: p }, { x: d, y: s, onComplete() { a.data('loop-timeline').restart(); } })); } if (a.hasClass('rs-pulse') && void 0 == a.data('loop-timeline')) { a.data('loop-timeline', new punchgs.TimelineLite()); const h = void 0 == a.data('zoomstart') ? 0 : a.data('zoomstart'); const c = void 0 == a.data('zoomend') ? 0 : a.data('zoomend'); var n = void 0 == a.data('speed') ? 2 : a.data('speed'); var r = void 0 == a.data('easing') ? punchgs.Power2.easeInOut : a.data('easing'); a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', scale: h }, { scale: c, ease: r })), a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(a, n, { force3D: 'auto', scale: c }, { scale: h, onComplete() { a.data('loop-timeline').restart(); } })); } if (a.hasClass('rs-wave') && void 0 == a.data('loop-timeline')) {
      a.data('loop-timeline', new punchgs.TimelineLite()); let g = void 0 == a.data('angle') ? 10 : parseInt(a.data('angle'), 0); let m = void 0 == a.data('radius') ? 10 : parseInt(a.data('radius'), 0); var n = void 0 == a.data('speed') ? -20 : a.data('speed'); var o = void 0 == a.data('origin') ? '50% 50%' : a.data('origin'); const u = o.split(' '); const v = new Object(); u.length >= 1 ? (v.x = u[0], v.y = u[1]) : (v.x = '50%', v.y = '50%'), g *= e, m *= e; const f = 0 - a.height() / 2 + m * (-1 + parseInt(v.y, 0) / 100); const w = a.width() * (-0.5 + parseInt(v.x, 0) / 100); const y = {
        a: 0, ang: g, element: a, unit: m, xoffset: w, yoffset: f,
      }; a.data('loop-timeline').append(new punchgs.TweenLite.fromTo(y, n, { a: 360 }, {
        a: 0, force3D: 'auto', ease: punchgs.Linear.easeNone, onUpdate() { const a = y.a * (Math.PI / 180); punchgs.TweenLite.to(y.element, 0.1, { force3D: 'auto', x: y.xoffset + Math.cos(a) * y.unit, y: y.yoffset + y.unit * (1 - Math.sin(a)) }); }, onComplete() { a.data('loop-timeline').restart(); },
      }));
    }
  }; var w = function (a) { a.find('.rs-pendulum, .rs-slideloop, .rs-pulse, .rs-wave').each(function () { const a = jQuery(this); void 0 != a.data('loop-timeline') && (a.data('loop-timeline').pause(), a.data('loop-timeline', null)); }); };
}(jQuery));
