/** ******************************************
 * REVOLUTION 5.0 EXTENSION - KEN BURN
 * @version: 1.0.0 (03.08.2015)
 * @requires jquery.themepunch.revolution.js
 * @author ThemePunch
******************************************** */
!(function () {
  const t = jQuery.fn.revolution; jQuery.extend(!0, t, {
    stopKenBurn(t) { void 0 != t.data('kbtl') && t.data('kbtl').pause(); },
    startKenBurn(t, e, a) {
      const r = t.data(); const n = t.find('.defaultimg'); const s = n.data('lazyload') || n.data('src'); const i = (r.owidth / r.oheight, e.sliderType === 'carousel' ? e.carousel.slide_width : e.ul.width()); const o = e.ul.height(); t.data('kbtl') && t.data('kbtl').kill(), a = a || 0, t.find('.tp-kbimg').length == 0 && (t.append(`<div class="tp-kbimg-wrap" style="z-index:2;width:100%;height:100%;top:0px;left:0px;position:absolute;"><img class="tp-kbimg" src="${s}" style="position:absolute;" width="${r.owidth}" height="${r.oheight}"></div>`), t.data('kenburn', t.find('.tp-kbimg'))); const d = function (t, e, a, r, n, s, i) { const o = t * a; const d = e * a; const l = Math.abs(r - o); const h = Math.abs(n - d); const p = new Object(); return p.l = (0 - s) * l, p.r = p.l + o, p.t = (0 - i) * h, p.b = p.t + d, p.h = s, p.v = i, p; }; const l = function (t, e, a, r, n) { const s = t.bgposition.split(' ') || 'center center'; let i = s[0] == 'center' ? '50%' : s[0] == 'left' || s[1] == 'left' ? '0%' : s[0] == 'right' || s[1] == 'right' ? '100%' : s[0]; let o = s[1] == 'center' ? '50%' : s[0] == 'top' || s[1] == 'top' ? '0%' : s[0] == 'bottom' || s[1] == 'bottom' ? '100%' : s[1]; i = parseInt(i, 0) / 100 || 0, o = parseInt(o, 0) / 100 || 0; const l = new Object(); return l.start = d(n.start.width, n.start.height, n.start.scale, e, a, i, o), l.end = d(n.start.width, n.start.height, n.end.scale, e, a, i, o), l; }; const h = function (t, e, a) {
        const r = a.scalestart / 100; const n = a.scaleend / 100; const s = void 0 != a.oofsetstart ? a.offsetstart.split(' ') || [0, 0] : [0, 0]; const i = void 0 != a.offsetend ? a.offsetend.split(' ') || [0, 0] : [0, 0]; a.bgposition = a.bgposition == 'center center' ? '50% 50%' : a.bgposition; { var o = new Object(); const d = t * r; const
          h = (d / a.owidth * a.oheight, t * n); h / a.owidth * a.oheight; } if (o.start = new Object(), o.starto = new Object(), o.end = new Object(), o.endo = new Object(), o.start.width = t, o.start.height = o.start.width / a.owidth * a.oheight, o.start.height < e) { const p = e / o.start.height; o.start.height = e, o.start.width = o.start.width * p; }o.start.transformOrigin = a.bgposition, o.start.scale = r, o.end.scale = n, o.start.rotation = `${a.rotatestart}deg`, o.end.rotation = `${a.rotateend}deg`; const g = l(a, t, e, s, o); s[0] = parseFloat(s[0]) + g.start.l, i[0] = parseFloat(i[0]) + g.end.l, s[1] = parseFloat(s[1]) + g.start.t, i[1] = parseFloat(i[1]) + g.end.t; const c = g.start.r - g.start.l; const b = g.start.b - g.start.t; const u = g.end.r - g.end.l; const f = g.end.b - g.end.t; return s[0] = s[0] > 0 ? 0 : c + s[0] < t ? t - c : s[0], i[0] = i[0] > 0 ? 0 : u + i[0] < t ? t - u : i[0], s[1] = s[1] > 0 ? 0 : b + s[1] < e ? e - b : s[1], i[1] = i[1] > 0 ? 0 : f + i[1] < e ? e - f : i[1], o.starto.x = `${s[0]}px`, o.starto.y = `${s[1]}px`, o.endo.x = `${i[0]}px`, o.endo.y = `${i[1]}px`, o.end.ease = o.endo.ease = a.ease, o.end.force3D = o.endo.force3D = !0, o;
      }; void 0 != t.data('kbtl') && (t.data('kbtl').kill(), t.removeData('kbtl')); const p = t.data('kenburn'); const g = p.parent(); const c = h(i, o, r); const b = new punchgs.TimelineLite(); b.pause(), c.start.transformOrigin = '0% 0%', c.starto.transformOrigin = '0% 0%', b.add(punchgs.TweenLite.fromTo(p, r.duration / 1e3, c.start, c.end), 0), b.add(punchgs.TweenLite.fromTo(g, r.duration / 1e3, c.starto, c.endo), 0), b.progress(a), b.play(), t.data('kbtl', b);
    },
  });
}(jQuery));
